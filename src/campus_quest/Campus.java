package campus_quest;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.*;

public class Campus {
	// Map of Rooms to Map of Directions to Neighboring Rooms
	// Map<Room, Map<Direction, Room>>
    public final Map<String, Map<String, String>> map;

    public Campus() {
    	String my_name = "Professor Rhode";
    	this.map = getFroshLevelMap(my_name);
        //this.map = getUpperLevelMap(my_name);
    }

    public Map<String, String> getDirectionsToRoomsMap(String room_name) {
        return map.getOrDefault(room_name, Collections.emptyMap());
    }

    public Set<String> getRoomNames() {
        return map.keySet();
    }

   
    // the key of the map is the Room name
    // the value of the map is another map: the directionsToRoomsMap
    //   directionsToRoomsMap: 
    //       key: direction (N,S,E,W) or item
    //       value: name of next room corresponding to direction, or, name of item
  
    @SuppressWarnings("unused") 
 	private Map<String, Map<String, String>> getFroshLevelMap(String name) {
    	
    	System.out.println("Loading map for: "+ name);
		if(name.equals("Professor Rhode")) {
			System.out.println("ERROR: UNABLE TO LOAD MAP, USE YOUR OWN NAME!");
			return new HashMap<>();
		}
		
         Map<String, Map<String, String>> map = new LinkedHashMap<>();

         map.put("Dorm Room", Map.of(
             "E", "Computer Lab"
         ));

         map.put("Computer Lab", Map.of(
             "W", "Dorm Room",
             "E", "Cafeteria",
             "item", "laptop"
         ));

         map.put("Cafeteria", Map.of(
             "W", "Computer Lab",
             "E", "Library",
             "item", "coffee"
         ));

         map.put("Library", Map.of(
             "W", "Cafeteria",
             "item", "notebook"
         ));

         map.put("Classroom", Map.of(
             "W", "Library"
         ));
         
         return map;
     }
    
    @SuppressWarnings("unused")
    private static Map<String, Map<String, String>>  getUpperLevelMap(String name) {
    	
    		System.out.println("Loading map for: "+ name);
    		if(name.equals("Professor Rhode")) {
    			System.out.println("ERROR: UNABLE TO LOAD MAP, USE YOUR OWN NAME!");
    			return new HashMap<>();
    		}	
    	
    		String list_binary = "rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleH"
    				+ "AAAAAIdwQAAAAIdAQkck8wQUJYTnlBQmRxWVhaaExuVjBhV3d1VEdsdWEyVmtTR0Z6YUUxaG"
    				+ "NEVEFUbHdRYk1EN0FnQUJXZ0FMWVdOalpYTnpUM0prWlhKNGNnQVJhbUYyWVM1MWRHbHNMa2"
    				+ "hoYzJoTllYQUZCOXJCd3haZzBRTUFBa1lBQ214dllXUkdZV04wYjNKSkFBbDBhSEpsYzJodm"
    				+ "JHUjRjRDlBQUFBQUFBQU1kd2dBQUFBUUFBQUFDblFBQ1VSdmNtMGdVbTl2YlhOeEFINEFBVD"
    				+ "lBQUFBQUFBQUJkd2dBQUFBQ0FBQUFBWFFBQVVWMEFBNVRkSFZrWlc1MElFTmxiblJsY25oeE"
    				+ "FINEFCbk54QUg0QUFUOUFBQUFBQUFBR2R3Z0FBQUFJQUFBQUJYUUFCR2wwWlcxMEFBVm1iSG"
    				+ "xsY25RQUFWTjBBQXhNWldOMGRYSmxJRWhoYkd4eEFINEFCWFFBREVOdmJYQjFkR1Z5SUV4aF"
    				+ "luUUFBVTUwQUJKUWNtOW1aWE56YjNJbmN5QlBabVpwWTJWMEFBRlhjUUIrQUFONGNRQitBQX"
    				+ "h6Y1FCK0FBRS9RQUFBQUFBQUJuY0lBQUFBQ0FBQUFBUnhBSDRBQ0hRQUJteGhjSFJ2Y0hFQ"
    				+ "WZnQUtkQUFKUTJGbVpYUmxjbWxoY1FCK0FBVjBBQTlGYkdWamRISnZibWxqY3lCTVlXSnhB"
    				+ "SDRBRDNFQWZnQUdlSEVBZmdBU2MzRUFmZ0FCUDBBQUFBQUFBQU4zQ0FBQUFBUUFBQUFEY1F"
    				+ "CK0FBaDBBQVpqYjJabVpXVnhBSDRBRFhFQWZnQU1jUUIrQUFwMEFBZE1hV0p5WVhKNWVIRU"
    				+ "FmZ0FXYzNFQWZnQUJQMEFBQUFBQUFBTjNDQUFBQUFRQUFBQUNjUUIrQUExeEFINEFFbkVB"
    				+ "ZmdBSWRBQUlibTkwWldKdmIydDRjUUIrQUE1emNRQitBQUUvUUFBQUFBQUFBWGNJQUFBQUF"
    				+ "nQUFBQUZ4QUg0QUNuRUFmZ0FHZUhRQURFRmtiV2x1SUU5bVptbGpaWE54QUg0QUFUOUFBQU"
    				+ "FBQUFBQmR3Z0FBQUFDQUFBQUFYRUFmZ0FOY1FCK0FBdDRjUUIrQUF0emNRQitBQUUvUUFBQ"
    				+ "UFBQUFBM2NJQUFBQUJBQUFBQU54QUg0QURYRUFmZ0FHY1FCK0FBcHhBSDRBR25RQUFWZDBBQ"
    				+ "WxEYkdGemMzSnZiMjE0Y1FCK0FCTnpjUUIrQUFFL1FBQUFBQUFBQTNjSUFBQUFCQUFBQUFK"
    				+ "eEFINEFDSFFBQ21KeVpXRmtZbTloY21SeEFINEFEM0VBZmdBTWVIRUFmZ0FlYzNFQWZnQUJ"
    				+ "QMEFBQUFBQUFBRjNDQUFBQUFJQUFBQUJjUUIrQUFWMEFBeE1aV04wZFhKbElFaGhiR3g0Z"
    				+ "UFBPXQEJHJPMEFCWE55QUJkcVlYWmhMblYwYVd3dVRHbHVhMlZrU0dGemFFMWhjRFRBVG"
    				+ "x3UWJNRDdBZ0FCV2dBTFlXTmpaWE56VDNKa1pYSjRjZ0FSYW1GMllTNTFkR2xzTGtoaGMyaE"
    				+ "5ZWEFGQjlyQnd4WmcwUU1BQWtZQUNteHZZV1JHWVdOMGIzSkpBQWwwYUhKbGMyaHZiR1I0Y0"
    				+ "Q5QUFBQUFBQUFNZHdnQUFBQVFBQUFBQ25RQUNVUnZjbTBnVW05dmJYTnhBSDRBQVQ5QUFBQ"
    				+ "UFBQUFCZHdnQUFBQUNBQUFBQVhRQUFVVjBBQTVUZEhWa1pXNTBJRU5sYm5SbGNuaHhBSDRBQm"
    				+ "5OeEFINEFBVDlBQUFBQUFBQUdkd2dBQUFBSUFBQUFCWFFBQkdsMFpXMTBBQVZtYkhsbGNuUU"
    				+ "FBVk4wQUF4TVpXTjBkWEpsSUVoaGJHeHhBSDRBQlhRQURFTnZiWEIxZEdWeUlFeGhZblFBQVU1"
    				+ "MEFCSlFjbTltWlhOemIzSW5jeUJQWm1acFkyVjBBQUZYY1FCK0FBTjRjUUIrQUF4emNRQitBQ"
    				+ "UUvUUFBQUFBQUFCbmNJQUFBQUNBQUFBQVJ4QUg0QUNIUUFCbXhoY0hSdmNIRUFmZ0FLZEFBSlE"
    				+ "yRm1aWFJsY21saGNRQitBQVYwQUE5RmJHVmpkSEp2Ym1samN5Qk1ZV0p4QUg0QUQzRUFmZ0FHZ"
    				+ "UhFQWZnQVNjM0VBZmdBQlAwQUFBQUFBQUFOM0NBQUFBQVFBQUFBRGNRQitBQWgwQUFaamIyWm"
    				+ "1aV1Z4QUg0QURYRUFmZ0FNY1FCK0FBcDBBQWRNYVdKeVlYSjVlSEVBZmdBV2MzRUFmZ0FCUDB"
    				+ "BQUFBQUFBQU4zQ0FBQUFBUUFBQUFDY1FCK0FBMXhBSDRBRW5FQWZnQUlkQUFJYm05MFpXSnZi"
    				+ "MnQ0Y1FCK0FBNXpjUUIrQUFFL1FBQUFBQUFBQVhjSUFBQUFBZ0FBQUFGeEFINEFDbkVBZmdBR"
    				+ "2VIUUFERUZrYldsdUlFOW1abWxqWlhOeEFINEFBVDlBQUFBQUFBQUJkd2dBQUFBQ0FBQUFBW"
    				+ "EVBZmdBTmNRQitBQXQ0Y1FCK0FBdHpjUUIrQUFFL1FBQUFBQUFBQTNjSUFBQUFCQUFBQUFOME"
    				+ "FBRkZkQUFKUTJ4aGMzTnliMjl0Y1FCK0FBMXhBSDRBQm5FQWZnQUtjUUIrQUJwNGNRQitBQk5"
    				+ "6Y1FCK0FBRS9RQUFBQUFBQUEzY0lBQUFBQkFBQUFBSnhBSDRBQ0hRQUNtSnlaV0ZrWW05aGNt"
    				+ "UnhBSDRBRDNFQWZnQU1lSEVBZmdBZWMzRUFmZ0FCUDBBQUFBQUFBQUYzQ0FBQUFBSUFBQUFCY"
    				+ "1FCK0FBOTBBQXhNWldOMGRYSmxJRWhoYkd4NGVBQT10BCByTzBBQlhOeUFCZHFZWFpoTG5WMG"
    				+ "FXd3VUR2x1YTJWa1NHRnphRTFoY0RUQVRsd1FiTUQ3QWdBQldnQUxZV05qWlhOelQzSmtaWEo"
    				+ "0Y2dBUmFtRjJZUzUxZEdsc0xraGhjMmhOWVhBRkI5ckJ3eFpnMFFNQUFrWUFDbXh2WVdSR1lXT"
    				+ "jBiM0pKQUFsMGFISmxjMmh2YkdSNGNEOUFBQUFBQUFBTWR3Z0FBQUFRQUFBQUNuUUFDVVJ2Y20"
    				+ "wZ1VtOXZiWE54QUg0QUFUOUFBQUFBQUFBQmR3Z0FBQUFDQUFBQUFYUUFBVVYwQUE1VGRIVmtaVz"
    				+ "UwSUVObGJuUmxjbmh4QUg0QUJuTnhBSDRBQVQ5QUFBQUFBQUFHZHdnQUFBQUlBQUFBQlhRQUJHb"
    				+ "DBaVzEwQUFWbWJIbGxjblFBQVZOMEFBeE1aV04wZFhKbElFaGhiR3h4QUg0QUJYUUFERU52Ylh"
    				+ "CMWRHVnlJRXhoWW5RQUFVNTBBQkpRY205bVpYTnpiM0luY3lCUFptWnBZMlYwQUFGWGNRQitBQU"
    				+ "40Y1FCK0FBeHpjUUIrQUFFL1FBQUFBQUFBQm5jSUFBQUFDQUFBQUFSeEFINEFDSFFBQm14aGNI"
    				+ "UnZjSEVBZmdBS2RBQUpRMkZtWlhSbGNtbGhjUUIrQUFWMEFBOUZiR1ZqZEhKdmJtbGpjeUJNWVdK"
    				+ "eEFINEFEM0VBZmdBR2VIRUFmZ0FTYzNFQWZnQUJQMEFBQUFBQUFBWjNDQUFBQUFnQUFBQUVjUU"
    				+ "IrQUFoMEFBWmpiMlptWldWeEFINEFDblFBQjB4cFluSmhjbmwwQUFGRmRBQUpRMnhoYzNOeWIyOX"
    				+ "RjUUIrQUExeEFINEFESGh4QUg0QUZuTnhBSDRBQVQ5QUFBQUFBQUFEZHdnQUFBQUVBQUFBQW5FQW"
    				+ "ZnQU5jUUIrQUJKeEFINEFDSFFBQ0c1dmRHVmliMjlyZUhFQWZnQU9jM0VBZmdBQlAwQUFBQUFBQ"
    				+ "UFGM0NBQUFBQUlBQUFBQmNRQitBQXB4QUg0QUJuaDBBQXhCWkcxcGJpQlBabVpwWTJWemNRQitBQ"
    				+ "UUvUUFBQUFBQUFBWGNJQUFBQUFnQUFBQUZ4QUg0QURYRUFmZ0FMZUhFQWZnQUxjM0VBZmdBQlAwQ"
    				+ "UFBQUFBQUFOM0NBQUFBQVFBQUFBQ2NRQitBQTF4QUg0QUJuRUFmZ0FLY1FCK0FCeDRjUUIrQUJOe"
    				+ "mNRQitBQUUvUUFBQUFBQUFBM2NJQUFBQUJBQUFBQUp4QUg0QUNIUUFDbUp5WldGa1ltOWhjbVJ4Q"
    				+ "Ug0QUQzRUFmZ0FNZUhFQWZnQVljM0VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQUlBQUFBQmNRQitBQ"
    				+ "TkwQUFsRFlXWmxkR1Z5YVdGNGVBQT10BCByTzBBQlhOeUFCZHFZWFpoTG5WMGFXd3VUR2x1YTJWa"
    				+ "1NHRnphRTFoY0RUQVRsd1FiTUQ3QWdBQldnQUxZV05qWlhOelQzSmtaWEo0Y2dBUmFtRjJZUzUxZE"
    				+ "dsc0xraGhjMmhOWVhBRkI5ckJ3eFpnMFFNQUFrWUFDbXh2WVdSR1lXTjBiM0pKQUFsMGFISmxjMmh"
    				+ "2YkdSNGNEOUFBQUFBQUFBTWR3Z0FBQUFRQUFBQUNuUUFDVVJ2Y20wZ1VtOXZiWE54QUg0QUFUOUF"
    				+ "BQUFBQUFBQmR3Z0FBQUFDQUFBQUFYUUFBVVYwQUE1VGRIVmtaVzUwSUVObGJuUmxjbmh4QUg0QUJu"
    				+ "TnhBSDRBQVQ5QUFBQUFBQUFHZHdnQUFBQUlBQUFBQlhRQUJHbDBaVzEwQUFWbWJIbGxjblFBQVZO"
    				+ "MEFBeE1aV04wZFhKbElFaGhiR3h4QUg0QUJYUUFERU52YlhCMWRHVnlJRXhoWW5RQUFVNTBBQkpRY"
    				+ "205bVpYTnpiM0luY3lCUFptWnBZMlYwQUFGWGNRQitBQU40Y1FCK0FBeHpjUUIrQUFFL1FBQUFBQU"
    				+ "FBQm5jSUFBQUFDQUFBQUFSeEFINEFDSFFBQm14aGNIUnZjSEVBZmdBS2RBQUpRMkZtWlhSbGNtbGhj"
    				+ "UUIrQUFWMEFBOUZiR1ZqZEhKdmJtbGpjeUJNWVdKeEFINEFEM0VBZmdBR2VIRUFmZ0FTYzNFQWZnQU"
    				+ "JQMEFBQUFBQUFBWjNDQUFBQUFnQUFBQUVjUUIrQUFoMEFBWmpiMlptWldWeEFINEFDblFBQjB4cFlu"
    				+ "Smhjbmx4QUg0QURYRUFmZ0FNZEFBQlYzUUFDVU5zWVhOemNtOXZiWGh4QUg0QUZuTnhBSDRBQVQ5QU"
    				+ "FBQUFBQUFEZHdnQUFBQUVBQUFBQW5FQWZnQU5jUUIrQUJKeEFINEFDSFFBQ0c1dmRHVmliMjlyZUhF"
    				+ "QWZnQU9jM0VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQUlBQUFBQmNRQitBQXB4QUg0QUJuaDBBQXhCWkc"
    				+ "xcGJpQlBabVpwWTJWemNRQitBQUUvUUFBQUFBQUFBWGNJQUFBQUFnQUFBQUZ4QUg0QURYRUFmZ0FMZU"
    				+ "hFQWZnQUxjM0VBZmdBQlAwQUFBQUFBQUFOM0NBQUFBQVFBQUFBQ2NRQitBQTF4QUg0QUJuRUFmZ0FLY"
    				+ "1FCK0FCeDRjUUIrQUJOemNRQitBQUUvUUFBQUFBQUFBM2NJQUFBQUJBQUFBQUp4QUg0QUNIUUFDbUp5"
    				+ "WldGa1ltOWhjbVJ4QUg0QUQzRUFmZ0FNZUhFQWZnQVljM0VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQU"
    				+ "lBQUFBQmNRQitBQVYwQUFsRFlXWmxkR1Z5YVdGNGVBQT10BBxyTzBBQlhOeUFCZHFZWFpoTG5WMGFX"
    				+ "d3VUR2x1YTJWa1NHRnphRTFoY0RUQVRsd1FiTUQ3QWdBQldnQUxZV05qWlhOelQzSmtaWEo0Y2dBUmF"
    				+ "tRjJZUzUxZEdsc0xraGhjMmhOWVhBRkI5ckJ3eFpnMFFNQUFrWUFDbXh2WVdSR1lXTjBiM0pKQUFsM"
    				+ "GFISmxjMmh2YkdSNGNEOUFBQUFBQUFBTWR3Z0FBQUFRQUFBQUNuUUFDVVJ2Y20wZ1VtOXZiWE54QUg"
    				+ "0QUFUOUFBQUFBQUFBQmR3Z0FBQUFDQUFBQUFYUUFBVVYwQUE1VGRIVmtaVzUwSUVObGJuUmxjbmh4QUg"
    				+ "0QUJuTnhBSDRBQVQ5QUFBQUFBQUFHZHdnQUFBQUlBQUFBQlhRQUJHbDBaVzEwQUFWbWJIbGxjblFBQVZ"
    				+ "OMEFBeE1aV04wZFhKbElFaGhiR3h4QUg0QUJYUUFERU52YlhCMWRHVnlJRXhoWW5RQUFVNTBBQkpRY205b"
    				+ "VpYTnpiM0luY3lCUFptWnBZMlYwQUFGWGNRQitBQU40Y1FCK0FBeHpjUUIrQUFFL1FBQUFBQUFBQm5jSU"
    				+ "FBQUFDQUFBQUFSeEFINEFDSFFBQm14aGNIUnZjSEVBZmdBS2RBQUpRMkZtWlhSbGNtbGhjUUIrQUFWMEFB"
    				+ "OUZiR1ZqZEhKdmJtbGpjeUJNWVdKeEFINEFEM0VBZmdBR2VIRUFmZ0FTYzNFQWZnQUJQMEFBQUFBQUFBT"
    				+ "jNDQUFBQUFRQUFBQURjUUIrQUFoMEFBWmpiMlptWldWeEFINEFEWEVBZmdBTWNRQitBQXAwQUFkTWFXSn"
    				+ "lZWEo1ZUhFQWZnQVdjM0VBZmdBQlAwQUFBQUFBQUFOM0NBQUFBQVFBQUFBRGRBQUJSWFFBQ1VOc1lYTnpj"
    				+ "bTl2YlhFQWZnQU5jUUIrQUJKeEFINEFDSFFBQ0c1dmRHVmliMjlyZUhFQWZnQU9jM0VBZmdBQlAwQUFBQU"
    				+ "FBQUFGM0NBQUFBQUlBQUFBQmNRQitBQXB4QUg0QUJuaDBBQXhCWkcxcGJpQlBabVpwWTJWemNRQitBQUUvUU"
    				+ "FBQUFBQUFBWGNJQUFBQUFnQUFBQUZ4QUg0QURYRUFmZ0FMZUhFQWZnQUxjM0VBZmdBQlAwQUFBQUFBQUFOM"
    				+ "0NBQUFBQVFBQUFBQ2NRQitBQTF4QUg0QUJuRUFmZ0FLY1FCK0FCeDRjUUIrQUJOemNRQitBQUUvUUFBQUFBQ"
    				+ "UFBM2NJQUFBQUJBQUFBQUp4QUg0QUNIUUFDbUp5WldGa1ltOWhjbVJ4QUg0QUQzRUFmZ0FNZUhFQWZnQVpjM0"
    				+ "VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQUlBQUFBQmNRQitBQTkwQUFkTWFXSnlZWEo1ZUhnQXQEHHJPMEFCW"
    				+ "E55QUJkcVlYWmhMblYwYVd3dVRHbHVhMlZrU0dGemFFMWhjRFRBVGx3UWJNRDdBZ0FCV2dBTFlXTmpaWE56V"
    				+ "DNKa1pYSjRjZ0FSYW1GMllTNTFkR2xzTGtoaGMyaE5ZWEFGQjlyQnd4WmcwUU1BQWtZQUNteHZZV1JHWVdOM"
    				+ "GIzSkpBQWwwYUhKbGMyaHZiR1I0Y0Q5QUFBQUFBQUFNZHdnQUFBQVFBQUFBQ25RQUNVUnZjbTBnVW05dmJYT"
    				+ "nhBSDRBQVQ5QUFBQUFBQUFCZHdnQUFBQUNBQUFBQVhRQUFVVjBBQTVUZEhWa1pXNTBJRU5sYm5SbGNuaHhBS"
    				+ "DRBQm5OeEFINEFBVDlBQUFBQUFBQUdkd2dBQUFBSUFBQUFCWFFBQkdsMFpXMTBBQVZtYkhsbGNuUUFBVk4wQ"
    				+ "UF4TVpXTjBkWEpsSUVoaGJHeHhBSDRBQlhRQURFTnZiWEIxZEdWeUlFeGhZblFBQVU1MEFCSlFjbTltWlhOe"
    				+ "mIzSW5jeUJQWm1acFkyVjBBQUZYY1FCK0FBTjRjUUIrQUF4emNRQitBQUUvUUFBQUFBQUFCbmNJQUFBQUNBQU"
    				+ "FBQVJ4QUg0QUNIUUFCbXhoY0hSdmNIRUFmZ0FLZEFBSlEyRm1aWFJsY21saGNRQitBQVYwQUE5RmJHVmpkSE"
    				+ "p2Ym1samN5Qk1ZV0p4QUg0QUQzRUFmZ0FHZUhFQWZnQVNjM0VBZmdBQlAwQUFBQUFBQUFOM0NBQUFBQVFBQUF"
    				+ "BRGNRQitBQWgwQUFaamIyWm1aV1Z4QUg0QURYRUFmZ0FNY1FCK0FBcDBBQWRNYVdKeVlYSjVlSEVBZmdBV2M"
    				+ "zRUFmZ0FCUDBBQUFBQUFBQU4zQ0FBQUFBUUFBQUFEY1FCK0FBMXhBSDRBRW5FQWZnQUlkQUFJYm05MFpXSnZ"
    				+ "iMnQwQUFGWGRBQUpRMnhoYzNOeWIyOXRlSEVBZmdBT2MzRUFmZ0FCUDBBQUFBQUFBQUYzQ0FBQUFBSUFBQUF"
    				+ "CY1FCK0FBcHhBSDRBQm5oMEFBeEJaRzFwYmlCUFptWnBZMlZ6Y1FCK0FBRS9RQUFBQUFBQUFYY0lBQUFBQWdB"
    				+ "QUFBRnhBSDRBRFhFQWZnQUxlSEVBZmdBTGMzRUFmZ0FCUDBBQUFBQUFBQU4zQ0FBQUFBUUFBQUFDY1FCK0FBM"
    				+ "XhBSDRBQm5FQWZnQUtjUUIrQUJ4NGNRQitBQk56Y1FCK0FBRS9RQUFBQUFBQUEzY0lBQUFBQkFBQUFBSnhBSD"
    				+ "RBQ0hRQUNtSnlaV0ZrWW05aGNtUnhBSDRBRDNFQWZnQU1lSEVBZmdBYWMzRUFmZ0FCUDBBQUFBQUFBQUYzQ0"
    				+ "FBQUFBSUFBQUFCY1FCK0FBVjBBQWRNYVdKeVlYSjVlSGdBdAQcck8wQUJYTnlBQmRxWVhaaExuVjBhV3d1VE"
    				+ "dsdWEyVmtTR0Z6YUUxaGNEVEFUbHdRYk1EN0FnQUJXZ0FMWVdOalpYTnpUM0prWlhKNGNnQVJhbUYyWVM1MWR"
    				+ "HbHNMa2hoYzJoTllYQUZCOXJCd3haZzBRTUFBa1lBQ214dllXUkdZV04wYjNKSkFBbDBhSEpsYzJodmJHUjRj"
    				+ "RDlBQUFBQUFBQU1kd2dBQUFBUUFBQUFDblFBQ1VSdmNtMGdVbTl2YlhOeEFINEFBVDlBQUFBQUFBQUJkd2dBQ"
    				+ "UFBQ0FBQUFBWFFBQVVWMEFBNVRkSFZrWlc1MElFTmxiblJsY25oeEFINEFCbk54QUg0QUFUOUFBQUFBQUFBR2R"
    				+ "3Z0FBQUFJQUFBQUJYUUFCR2wwWlcxMEFBVm1iSGxsY25RQUFWTjBBQXhNWldOMGRYSmxJRWhoYkd4eEFINEFC"
    				+ "WFFBREVOdmJYQjFkR1Z5SUV4aFluUUFBVTUwQUJKUWNtOW1aWE56YjNJbmN5QlBabVpwWTJWMEFBRlhjUUIrQ"
    				+ "UFONGNRQitBQXh6Y1FCK0FBRS9RQUFBQUFBQUJuY0lBQUFBQ0FBQUFBUnhBSDRBQ0hRQUJteGhjSFJ2Y0hFQW"
    				+ "ZnQUtkQUFKUTJGbVpYUmxjbWxoY1FCK0FBVjBBQTlGYkdWamRISnZibWxqY3lCTVlXSnhBSDRBRDNFQWZnQUd"
    				+ "lSEVBZmdBU2MzRUFmZ0FCUDBBQUFBQUFBQU4zQ0FBQUFBUUFBQUFEY1FCK0FBaDBBQVpqYjJabVpXVnhBSDRB"
    				+ "RFhFQWZnQU1jUUIrQUFwMEFBZE1hV0p5WVhKNWVIRUFmZ0FXYzNFQWZnQUJQMEFBQUFBQUFBTjNDQUFBQUFRQ"
    				+ "UFBQURjUUIrQUExeEFINEFFbkVBZmdBSWRBQUlibTkwWldKdmIydDBBQUZUZEFBSlEyeGhjM055YjI5dGVIRU"
    				+ "FmZ0FPYzNFQWZnQUJQMEFBQUFBQUFBRjNDQUFBQUFJQUFBQUJjUUIrQUFweEFINEFCbmgwQUF4QlpHMXBiaUJQ"
    				+ "Wm1acFkyVnpjUUIrQUFFL1FBQUFBQUFBQVhjSUFBQUFBZ0FBQUFGeEFINEFEWEVBZmdBTGVIRUFmZ0FMYzNFQW"
    				+ "ZnQUJQMEFBQUFBQUFBTjNDQUFBQUFRQUFBQUNjUUIrQUExeEFINEFCbkVBZmdBS2NRQitBQng0Y1FCK0FCTnp"
    				+ "jUUIrQUFFL1FBQUFBQUFBQTNjSUFBQUFCQUFBQUFKeEFINEFDSFFBQ21KeVpXRmtZbTloY21SeEFINEFEM0VBZ"
    				+ "mdBTWVIRUFmZ0FhYzNFQWZnQUJQMEFBQUFBQUFBRjNDQUFBQUFJQUFBQUJjUUIrQUExMEFBZE1hV0p5WVhKNWV"
    				+ "IZ0F0BCRyTzBBQlhOeUFCZHFZWFpoTG5WMGFXd3VUR2x1YTJWa1NHRnphRTFoY0RUQVRsd1FiTUQ3QWdBQldnQU"
    				+ "xZV05qWlhOelQzSmtaWEo0Y2dBUmFtRjJZUzUxZEdsc0xraGhjMmhOWVhBRkI5ckJ3eFpnMFFNQUFrWUFDbXh2"
    				+ "WVdSR1lXTjBiM0pKQUFsMGFISmxjMmh2YkdSNGNEOUFBQUFBQUFBTWR3Z0FBQUFRQUFBQUNuUUFDVVJ2Y20wZ1"
    				+ "VtOXZiWE54QUg0QUFUOUFBQUFBQUFBQmR3Z0FBQUFDQUFBQUFYUUFBVVYwQUE1VGRIVmtaVzUwSUVObGJuUmxjb"
    				+ "mh4QUg0QUJuTnhBSDRBQVQ5QUFBQUFBQUFHZHdnQUFBQUlBQUFBQlhRQUJHbDBaVzEwQUFWbWJIbGxjblFBQVZOM"
    				+ "EFBeE1aV04wZFhKbElFaGhiR3h4QUg0QUJYUUFERU52YlhCMWRHVnlJRXhoWW5RQUFVNTBBQkpRY205bVpYTnpi"
    				+ "M0luY3lCUFptWnBZMlYwQUFGWGNRQitBQU40Y1FCK0FBeHpjUUIrQUFFL1FBQUFBQUFBQm5jSUFBQUFDQUFBQUF"
    				+ "WeEFINEFDSFFBQm14aGNIUnZjSEVBZmdBS2RBQUpRMkZtWlhSbGNtbGhjUUIrQUFWMEFBOUZiR1ZqZEhKdmJtbG"
    				+ "pjeUJNWVdKMEFBRk9kQUFKUTJ4aGMzTnliMjl0Y1FCK0FBOXhBSDRBQm5oeEFINEFFbk54QUg0QUFUOUFBQUFBQ"
    				+ "UFBRGR3Z0FBQUFFQUFBQUEzRUFmZ0FJZEFBR1kyOW1abVZsY1FCK0FBMXhBSDRBREhFQWZnQUtkQUFIVEdsaWNt"
    				+ "RnllWGh4QUg0QUdITnhBSDRBQVQ5QUFBQUFBQUFEZHdnQUFBQUVBQUFBQW5FQWZnQU5jUUIrQUJKeEFINEFDSFF"
    				+ "BQ0c1dmRHVmliMjlyZUhFQWZnQU9jM0VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQUlBQUFBQmNRQitBQXB4QUg0QU"
    				+ "JuaDBBQXhCWkcxcGJpQlBabVpwWTJWemNRQitBQUUvUUFBQUFBQUFBWGNJQUFBQUFnQUFBQUZ4QUg0QURYRUFmZ"
    				+ "0FMZUhFQWZnQUxjM0VBZmdBQlAwQUFBQUFBQUFOM0NBQUFBQVFBQUFBQ2NRQitBQTF4QUg0QUJuRUFmZ0FLY1FC"
    				+ "K0FCeDRjUUIrQUJOemNRQitBQUUvUUFBQUFBQUFBM2NJQUFBQUJBQUFBQUp4QUg0QUNIUUFDbUp5WldGa1ltOWh"
    				+ "jbVJ4QUg0QUQzRUFmZ0FNZUhFQWZnQVZjM0VBZmdBQlAwQUFBQUFBQUFGM0NBQUFBQUlBQUFBQmNRQitBQXAwQU"
    				+ "F4RGIyMXdkWFJsY2lCTVlXSjRlQUE9eA==";

    				
		
    		try {
    		        byte[] list_data = Base64.getDecoder().decode(list_binary);
    		        ObjectInputStream list_ois = new ObjectInputStream(new ByteArrayInputStream(list_data));
    		        @SuppressWarnings("unchecked")
    		        List<String> list = (List<String>) list_ois.readObject();
    		        list_ois.close();
    		     
    		        int index = Math.floorMod(name.hashCode(), list.size());
    		        byte[] map_data = Base64.getDecoder().decode(list.get(index));
    		        ObjectInputStream map_ois = new ObjectInputStream(new ByteArrayInputStream(map_data));
    		        Map<String, Map<String, String>> map = (Map<String, Map<String, String>>) map_ois.readObject();
    		        map_ois.close();
 
    		        System.out.println("Loading map for: "+ name);
    		        return map;
    		    } catch (Exception e) {
    		        e.printStackTrace();
    		        return Collections.emptyMap();  
    		    }
    		}
    
 
}
